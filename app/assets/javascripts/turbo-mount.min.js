import{Controller as t,Application as o}from"@hotwired/stimulus";class e extends t{constructor(){super(...arguments),this.skipPropsChangeCallback=!1}connect(){this._umountComponentCallback||(this._umountComponentCallback=this.mountComponent(this.mountElement,this.resolvedComponent,this.componentProps))}disconnect(){this.umountComponent()}propsValueChanged(){this.skipPropsChangeCallback?this.skipPropsChangeCallback=!1:(this.umountComponent(),this._umountComponentCallback||(this._umountComponentCallback=this.mountComponent(this.mountElement,this.resolvedComponent,this.componentProps)))}get componentProps(){return this.propsValue}get mountElement(){return this.hasMountTarget?this.mountTarget:this.element}get resolvedComponent(){return this.resolveMounted(this.componentValue).component}get resolvedPlugin(){return this.resolveMounted(this.componentValue).plugin}umountComponent(){this._umountComponentCallback?.(),this._umountComponentCallback=void 0}mountComponent(t,o,e){return this.resolvedPlugin.mountComponent({el:t,Component:o,props:e})}resolveMounted(t){return this.application.turboMount.resolve(t)}setComponentProps(t){this.skipPropsChangeCallback=!0,this.propsValue=t}}e.values={props:Object,component:String},e.targets=["mount"];const n=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();class r{constructor(t={}){this.components=new Map,this.application=this.findOrStartApplication(t.application),this.application.turboMount=this,this.application.register("turbo-mount",e),document.addEventListener("turbo:before-morph-element",(t=>{const o=t,{target:e,detail:n}=o;e.getAttribute("data-controller")?.includes("turbo-mount")&&(e.setAttribute("data-turbo-mount-props-value",n.newElement.getAttribute("data-turbo-mount-props-value")||"{}"),t.preventDefault())}))}register(t,o,r,s){if(s||(s=e),this.components.has(o))throw new Error(`Component '${o}' is already registered.`);if(this.components.set(o,{component:r,plugin:t}),s){const t=`turbo-mount-${n(o).replace(/_/g,"-").replace(/\//g,"--")}`;this.application.register(t,s)}}resolve(t){const o=this.components.get(t);if(!o)throw new Error(`Unknown component: ${t}`);return o}findOrStartApplication(t){let e=t||window.Stimulus;return e||(e=o.start(),window.Stimulus=e),e}}function s(t){return(o,e,n,r)=>{o.register(t,e,n,r)}}const i=t=>{const o=n(t).replace(/_/g,"-").replace(/\//g,"--");return[`turbo-mount--${o}`,`turbo-mount-${o}`]},u=({plugin:t,turboMount:o,components:e,controllers:n})=>{const r=n??[];for(const{module:n,filename:s}of e){const e=s.replace(/\.\w*$/,"").replace(/^[./]*components\//,""),u=i(e),p=r.find((({identifier:t})=>u.includes(t))),l=n.default??n;p?o.register(t,e,l,p.controllerConstructor):o.register(t,e,l)}};export{r as TurboMount,e as TurboMountController,s as buildRegisterFunction,u as registerComponentsBase};
//# sourceMappingURL=turbo-mount.min.js.map
